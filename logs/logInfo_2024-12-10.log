[2024-12-10 09:42:46 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 7056 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-10 09:42:46 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 09:42:46 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 09:42:46 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 09:42:46 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 09:42:47 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:42:47 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 09:42:47 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 09:42:47 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 09:42:47 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 919 ms
[2024-12-10 09:42:47 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-10 09:42:47 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 09:42:47 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 09:42:47 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:42:47 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 09:42:47 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.974 seconds (process running for 2.424)
[2024-12-10 09:42:48 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 09:42:48 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 09:42:48 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 22
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=22, profileUserId=null)
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@809d054
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 22

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 5 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                      |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ            |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                     |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                     |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                     |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|--------|------------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|----------|--------|---------|-----------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                      |
|----------------|----------|--------|---------|-----------------------------------------|
|12              |123123213 |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|6               |ㅇㅋ        |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|----------------|----------|--------|---------|-----------------------------------------|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 1 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 09:42:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:42:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:43:31 INFO http-nio-8080-exec-7] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 22
[2024-12-10 09:43:31 INFO http-nio-8080-exec-7] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=22, profileUserId=22)
[2024-12-10 09:43:31 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 22

            WHERE writer_user_id = 22

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-10 09:43:31 INFO http-nio-8080-exec-4] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=22, profileUserId=22)
[2024-12-10 09:43:31 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |uid |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|----|-------|
|--------|---------|---------|-----------|--------|---------|----|----|-------|

[2024-12-10 09:43:31 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 22, 1, 0))
        + MAX(IF(F2.to_user_id = 22, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 22
 {executed in 2 msec}
[2024-12-10 09:43:31 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|22      |5bc2a4e4-de6a-47cd-b544-9a79023a8a86.png |2024-12-09 16:09:49 |ss       |0        |0         |0         |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 09:43:35 INFO http-nio-8080-exec-8] [com.green.greengramver.user.UserController] UserController > PatchProfilePic > p UserPicPatchReq(signedUserId=22, pic=null, picName=null)
[2024-12-10 09:43:35 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE user
        SET pic = NULL
        WHERE user_id = 22
 {executed in 4 msec}
[2024-12-10 09:43:38 INFO http-nio-8080-exec-5] [com.green.greengramver.user.UserController] UserController > PatchProfilePic > p UserPicPatchReq(signedUserId=22, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@259da2ab, picName=null)
[2024-12-10 09:43:38 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE user
        SET pic = '3b8fc2c0-e7fa-4a52-9b5d-845dd372a570.png'
        WHERE user_id = 22
 {executed in 1 msec}
[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
        , IFNULL(nick_name, uid) AS nickName
        , pic, upw
         FROM user
        WHERE uid = 'asd'
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------|----|-------------------------------------------------------------|
|user_id |nickname |pic |upw                                                          |
|--------|---------|----|-------------------------------------------------------------|
|18      |asd      |null|$2a$10$OMdmpNGC9a9Nb2hSK2oGROemih6py1Qwe5RKL9atH9X3I.LFzY3nu |
|--------|---------|----|-------------------------------------------------------------|

[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 18
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=18, profileUserId=null)
[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                      |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ            |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|36      |ㅇ                 |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|35      |심영                |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd          |asd     |null                                     |1      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                     |1      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                     |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|--------|------------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 1 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 1 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 1 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|----------|--------|---------|-----------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                      |
|----------------|----------|--------|---------|-----------------------------------------|
|12              |123123213 |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|6               |ㅇㅋ        |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|----------------|----------|--------|---------|-----------------------------------------|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 1 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 1 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 1 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 1 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 09:43:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:54 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:43:56 INFO http-nio-8080-exec-2] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=18, profileUserId=18)
[2024-12-10 09:43:56 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 18, 1, 0))
        + MAX(IF(F2.to_user_id = 18, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 18
 {executed in 0 msec}
[2024-12-10 09:43:56 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|18      |null|2024-12-03 15:23:39 |asd      |1        |1         |3         |3               |0           |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 09:43:56 INFO http-nio-8080-exec-4] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 18
[2024-12-10 09:43:56 INFO http-nio-8080-exec-4] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=18, profileUserId=18)
[2024-12-10 09:43:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

            WHERE writer_user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-10 09:43:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|---------|----|----|-------|
|feed_id |contents          |location |created_at          |user_id |writernm |uid |pic |islike |
|--------|------------------|---------|--------------------|--------|---------|----|----|-------|
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |18      |asd      |asd |null|1      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd      |asd |null|1      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |18      |asd      |asd |null|0      |
|--------|------------------|---------|--------------------|--------|---------|----|----|-------|

[2024-12-10 09:43:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-10 09:43:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-10 09:43:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:43:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-10 09:43:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-10 09:43:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 2 msec}
[2024-12-10 09:43:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:43:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-10 09:43:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-10 09:43:56 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:43:56 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:01 INFO http-nio-8080-exec-8] [com.green.greengramver.feed.FeedController] FeedController > deleteFeed > p: com.green.greengramver.feed.model.FeedDeleteReq@619789ec
[2024-12-10 09:44:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE B, C, D
        FROM feed A
        LEFT JOIN feed_like B
        ON A.feed_id = B.feed_id
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        LEFT JOIN feed_pic D
        ON A.feed_id = D.feed_id
        WHERE A.feed_id = 32
        AND A.writer_user_id = 18
 {executed in 2 msec}
[2024-12-10 09:44:02 INFO http-nio-8080-exec-8] [com.green.greengramver.feed.FeedService] affectedRows: 2
[2024-12-10 09:44:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed
        WHERE feed_id = 32
        AND writer_user_id = 18
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 18
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=18, profileUserId=null)
[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm     |uid     |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ       |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|36      |ㅇ            |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|35      |심영           |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|34      |zzzz         |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|33      |aaa          |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|31      |aaa          |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                     |1      |
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                     |0      |
|29      |asdf         |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg |0      |
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|--------|-------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 1 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 1 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 1 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|----------|--------|---------|-----------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                      |
|----------------|----------|--------|---------|-----------------------------------------|
|12              |123123213 |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|6               |ㅇㅋ        |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|----------------|----------|--------|---------|-----------------------------------------|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 1 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 09:44:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:10 INFO http-nio-8080-exec-9] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=18, profileUserId=18)
[2024-12-10 09:44:10 INFO http-nio-8080-exec-6] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 18
[2024-12-10 09:44:10 INFO http-nio-8080-exec-6] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=18, profileUserId=18)
[2024-12-10 09:44:10 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 18, 1, 0))
        + MAX(IF(F2.to_user_id = 18, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 18
 {executed in 1 msec}
[2024-12-10 09:44:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

            WHERE writer_user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-10 09:44:10 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|18      |null|2024-12-03 15:23:39 |asd      |1        |1         |2         |2               |0           |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 09:44:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid |pic |islike |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|31      |aaa          |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd      |asd |null|1      |
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd      |asd |null|0      |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|

[2024-12-10 09:44:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-10 09:44:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-10 09:44:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 1 msec}
[2024-12-10 09:44:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-10 09:44:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:44:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 18
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=18, profileUserId=null)
[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm     |uid     |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ       |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|36      |ㅇ            |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|35      |심영           |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|34      |zzzz         |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|33      |aaa          |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|31      |aaa          |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                     |1      |
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                     |0      |
|29      |asdf         |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg |0      |
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|--------|-------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|----------|--------|---------|-----------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                      |
|----------------|----------|--------|---------|-----------------------------------------|
|12              |123123213 |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|6               |ㅇㅋ        |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|----------------|----------|--------|---------|-----------------------------------------|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 09:44:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:19 INFO http-nio-8080-exec-6] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 18
[2024-12-10 09:44:19 INFO http-nio-8080-exec-9] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=18, profileUserId=12)
[2024-12-10 09:44:19 INFO http-nio-8080-exec-6] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=18, profileUserId=12)
[2024-12-10 09:44:19 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

            WHERE writer_user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-10 09:44:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 18, 1, 0))
        + MAX(IF(F2.to_user_id = 18, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 12
 {executed in 0 msec}
[2024-12-10 09:44:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|12      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |2024-11-28 12:59:12 |고길동      |0        |1         |8         |3               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 09:44:19 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|-----------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ       |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동      |test |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|--------|-------------|---------|--------------------|--------|---------|-----|-----------------------------------------|-------|

[2024-12-10 09:44:19 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-10 09:44:19 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-10 09:44:19 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:19 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:19 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-10 09:44:19 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-10 09:44:19 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:19 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------|--------|---------|-----------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                      |
|----------------|----------|--------|---------|-----------------------------------------|
|12              |123123213 |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|6               |ㅇㅋ        |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|----------------|----------|--------|---------|-----------------------------------------|

[2024-12-10 09:44:19 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 1 msec}
[2024-12-10 09:44:19 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-10 09:44:19 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:19 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:19 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 1 msec}
[2024-12-10 09:44:19 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-10 09:44:19 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:19 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:19 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-10 09:44:19 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-10 09:44:19 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:19 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:19 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-10 09:44:19 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-10 09:44:19 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:19 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:19 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-10 09:44:19 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 09:44:19 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:19 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:19 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-10 09:44:19 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 09:44:19 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:44:19 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 18
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=18, profileUserId=null)
[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm     |uid     |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ       |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|36      |ㅇ            |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|35      |심영           |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|34      |zzzz         |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|33      |aaa          |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|31      |aaa          |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                     |1      |
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                     |0      |
|29      |asdf         |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg |0      |
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|--------|-------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 1 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|----------|--------|---------|-----------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                      |
|----------------|----------|--------|---------|-----------------------------------------|
|12              |123123213 |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|6               |ㅇㅋ        |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|----------------|----------|--------|---------|-----------------------------------------|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 1 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 09:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:31 INFO http-nio-8080-exec-5] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=18, profileUserId=18)
[2024-12-10 09:44:31 INFO http-nio-8080-exec-9] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 18
[2024-12-10 09:44:31 INFO http-nio-8080-exec-9] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=18, profileUserId=18)
[2024-12-10 09:44:31 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

            WHERE writer_user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-10 09:44:31 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 18, 1, 0))
        + MAX(IF(F2.to_user_id = 18, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 18
 {executed in 0 msec}
[2024-12-10 09:44:31 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid |pic |islike |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|31      |aaa          |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd      |asd |null|1      |
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd      |asd |null|0      |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|

[2024-12-10 09:44:31 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|18      |null|2024-12-03 15:23:39 |asd      |1        |1         |2         |2               |0           |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 09:44:31 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-10 09:44:31 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-10 09:44:31 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:31 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:31 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 1 msec}
[2024-12-10 09:44:31 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-10 09:44:31 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:31 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 18
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=18, profileUserId=null)
[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm     |uid     |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ       |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|36      |ㅇ            |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|35      |심영           |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|34      |zzzz         |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|33      |aaa          |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|31      |aaa          |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                     |1      |
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                     |0      |
|29      |asdf         |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg |0      |
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|--------|-------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 1 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|----------|--------|---------|-----------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                      |
|----------------|----------|--------|---------|-----------------------------------------|
|12              |123123213 |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|6               |ㅇㅋ        |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|----------------|----------|--------|---------|-----------------------------------------|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 1 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 1 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 09:44:36 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:36 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:39 INFO http-nio-8080-exec-2] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=18, profileUserId=19)
[2024-12-10 09:44:39 INFO http-nio-8080-exec-5] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 18
[2024-12-10 09:44:39 INFO http-nio-8080-exec-5] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=18, profileUserId=19)
[2024-12-10 09:44:39 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

            WHERE writer_user_id = 19

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-10 09:44:39 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 18, 1, 0))
        + MAX(IF(F2.to_user_id = 18, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 19
 {executed in 1 msec}
[2024-12-10 09:44:39 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname     |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|
|19      |null|2024-12-04 11:13:51 |사공그에게 압도적 감사 |2        |2         |4         |0               |3           |
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|

[2024-12-10 09:44:39 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|-------------|--------|----|-------|
|feed_id |contents |location |created_at          |user_id |writernm     |uid     |pic |islike |
|--------|---------|---------|--------------------|--------|-------------|--------|----|-------|
|36      |ㅇ        |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null|0      |
|35      |심영       |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null|0      |
|34      |zzzz     |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null|0      |
|33      |aaa      |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null|0      |
|--------|---------|---------|--------------------|--------|-------------|--------|----|-------|

[2024-12-10 09:44:39 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-10 09:44:39 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-10 09:44:39 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:39 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:39 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-10 09:44:39 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-10 09:44:39 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:44:39 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:39 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-10 09:44:39 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-10 09:44:39 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:39 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:39 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-10 09:44:39 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-10 09:44:39 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:39 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:44 INFO http-nio-8080-exec-3] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=18, profileUserId=19)
[2024-12-10 09:44:44 INFO http-nio-8080-exec-4] [com.green.greengramver.feed.model.FeedGetReq] page: 2, size: null, userId: 18
[2024-12-10 09:44:44 INFO http-nio-8080-exec-4] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=18, profileUserId=18)
[2024-12-10 09:44:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

            WHERE writer_user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 0 msec}
[2024-12-10 09:44:44 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 18, 1, 0))
        + MAX(IF(F2.to_user_id = 18, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 19
 {executed in 0 msec}
[2024-12-10 09:44:44 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |uid |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|----|-------|
|--------|---------|---------|-----------|--------|---------|----|----|-------|

[2024-12-10 09:44:44 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname     |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|
|19      |null|2024-12-04 11:13:51 |사공그에게 압도적 감사 |2        |2         |4         |0               |3           |
|--------|----|--------------------|-------------|---------|----------|----------|----------------|------------|

[2024-12-10 10:35:12 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 10:35:12 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 10:38:49 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 10072 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-10 10:38:49 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 10:38:49 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 10:38:49 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 10:38:50 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 10:38:50 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 10:38:50 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 10:38:50 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 10:38:50 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 10:38:50 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 785 ms
[2024-12-10 10:38:50 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-10 10:38:51 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 10:38:51 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 10:38:51 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 10:38:51 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 10:38:51 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.668 seconds (process running for 2.036)
[2024-12-10 10:38:56 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 10:38:56 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 10:38:56 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 18
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=18, profileUserId=null)
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7f4fa336
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm     |uid     |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ       |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|36      |ㅇ            |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|35      |심영           |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|34      |zzzz         |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|33      |aaa          |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|31      |aaa          |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                     |1      |
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                     |0      |
|29      |asdf         |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg |0      |
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|--------|-------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 1 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|----------|--------|---------|-----------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                      |
|----------------|----------|--------|---------|-----------------------------------------|
|12              |123123213 |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|6               |ㅇㅋ        |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|----------------|----------|--------|---------|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 10:38:56 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:38:56 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:39:55 INFO http-nio-8080-exec-5] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 18
[2024-12-10 10:39:55 INFO http-nio-8080-exec-5] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=18, profileUserId=12)
[2024-12-10 10:39:55 INFO http-nio-8080-exec-9] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=18, profileUserId=12)
[2024-12-10 10:39:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

            WHERE writer_user_id = 12

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-10 10:39:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 18, 1, 0))
        + MAX(IF(F2.to_user_id = 18, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 12
 {executed in 0 msec}
[2024-12-10 10:39:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|12      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |2024-11-28 12:59:12 |고길동      |0        |1         |8         |3               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 10:39:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|-----------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ       |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동      |test |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|--------|-------------|---------|--------------------|--------|---------|-----|-----------------------------------------|-------|

[2024-12-10 10:39:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-10 10:39:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-10 10:39:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:39:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:39:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-10 10:39:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-10 10:39:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:39:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|----------|--------|---------|-----------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                      |
|----------------|----------|--------|---------|-----------------------------------------|
|12              |123123213 |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|6               |ㅇㅋ        |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|----------------|----------|--------|---------|-----------------------------------------|

[2024-12-10 10:39:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-10 10:39:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-10 10:39:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:39:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:39:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-10 10:39:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-10 10:39:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:39:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:39:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-10 10:39:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-10 10:39:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:39:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:39:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-10 10:39:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-10 10:39:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:39:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:39:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 1 msec}
[2024-12-10 10:39:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 10:39:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:39:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:39:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 1 msec}
[2024-12-10 10:39:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 10:39:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:39:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:39:57 INFO http-nio-8080-exec-4] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=18, profileUserId=18)
[2024-12-10 10:39:57 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 18, 1, 0))
        + MAX(IF(F2.to_user_id = 18, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 18
 {executed in 0 msec}
[2024-12-10 10:39:57 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|18      |null|2024-12-03 15:23:39 |asd      |1        |1         |2         |2               |0           |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 10:39:57 INFO http-nio-8080-exec-2] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 18
[2024-12-10 10:39:57 INFO http-nio-8080-exec-2] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=18, profileUserId=18)
[2024-12-10 10:39:57 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

            WHERE writer_user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-10 10:39:57 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid |pic |islike |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|31      |aaa          |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd      |asd |null|1      |
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd      |asd |null|0      |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|

[2024-12-10 10:39:57 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-10 10:39:57 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-10 10:39:57 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:39:57 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:39:57 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 1 msec}
[2024-12-10 10:39:57 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-10 10:39:57 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:39:57 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 18
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=18, profileUserId=null)
[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm     |uid     |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ       |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|36      |ㅇ            |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|35      |심영           |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|34      |zzzz         |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|33      |aaa          |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|31      |aaa          |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd          |asd     |null                                     |1      |
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                     |0      |
|29      |asdf         |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg |0      |
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|--------|-------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f72a3852-68a4-4709-9fcf-f957106a1059.png |
|-----------------------------------------|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 1 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e144db0a-63fe-4f99-b677-064862378052.jpg |
|-----------------------------------------|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|-----------------------------------------|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 1 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 1 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 1 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 28
 {executed in 1 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|----------|--------|---------|-----------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                      |
|----------------|----------|--------|---------|-----------------------------------------|
|12              |123123213 |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|6               |ㅇㅋ        |12      |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|----------------|----------|--------|---------|-----------------------------------------|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 10:40:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:40:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:42:34 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET feed_id = 33
        , user_id = 18
        , comment = 'asdsada'
 {executed in 6 msec}
[2024-12-10 10:42:34 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET feed_id = 33
        , user_id = 18
        , comment = 'asdsada'
 {executed in 0 msec}
[2024-12-10 10:42:34 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|14        |
|----------|

[2024-12-10 10:42:36 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET feed_id = 33
        , user_id = 18
        , comment = 'asdadsad'
 {executed in 6 msec}
[2024-12-10 10:42:36 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET feed_id = 33
        , user_id = 18
        , comment = 'asdadsad'
 {executed in 0 msec}
[2024-12-10 10:42:36 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|15        |
|----------|

[2024-12-10 10:42:39 INFO http-nio-8080-exec-5] [com.green.greengramver.user.UserController] UserController > getUserInfo UserInfoGetReq(signedUserId=18, profileUserId=18)
[2024-12-10 10:42:39 INFO http-nio-8080-exec-6] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 18
[2024-12-10 10:42:39 INFO http-nio-8080-exec-6] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=18, profileUserId=18)
[2024-12-10 10:42:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 18

            WHERE writer_user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-10 10:42:39 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 18, 1, 0))
        + MAX(IF(F2.to_user_id = 18, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 18
 {executed in 1 msec}
[2024-12-10 10:42:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid |pic |islike |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|31      |aaa          |ㅁㅁaa     |2024-12-03 10:53:45 |18      |asd      |asd |null|1      |
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd      |asd |null|0      |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|

[2024-12-10 10:42:39 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|18      |null|2024-12-03 15:23:39 |asd      |1        |1         |2         |2               |0           |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 10:42:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-10 10:42:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-10 10:42:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:42:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:42:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 30
 {executed in 1 msec}
[2024-12-10 10:42:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-10 10:42:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comment A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:42:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:42:43 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET feed_id = 31
        , user_id = 18
        , comment = 'asdasdad'
 {executed in 7 msec}
[2024-12-10 10:42:43 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET feed_id = 31
        , user_id = 18
        , comment = 'asdasdad'
 {executed in 0 msec}
[2024-12-10 10:42:43 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|16        |
|----------|

[2024-12-10 10:42:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET feed_id = 31
        , user_id = 18
        , comment = 'asdadasdad'
 {executed in 2 msec}
[2024-12-10 10:42:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET feed_id = 31
        , user_id = 18
        , comment = 'asdadasdad'
 {executed in 0 msec}
[2024-12-10 10:42:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|17        |
|----------|

[2024-12-10 10:42:48 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedController] FeedController > deleteFeed > p: com.green.greengramver.feed.model.FeedDeleteReq@25e144bf
[2024-12-10 10:42:48 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE B, C, D
        FROM feed A
        LEFT JOIN feed_like B
        ON A.feed_id = B.feed_id
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        LEFT JOIN feed_pic D
        ON A.feed_id = D.feed_id
        WHERE A.feed_id = 31
        AND A.writer_user_id = 18
 {executed in 0 msec}
[2024-12-10 10:42:48 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedService] affectedRows: 4
[2024-12-10 10:42:48 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed
        WHERE feed_id = 31
        AND writer_user_id = 18
 {executed in 1 msec}
[2024-12-10 10:43:48 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 10:43:48 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 15:33:20 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 8420 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-10 15:33:20 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 15:33:20 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 15:33:20 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 15:33:21 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 15:33:21 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 15:33:21 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 15:33:21 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 15:33:21 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 15:33:21 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 766 ms
[2024-12-10 15:33:21 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-10 15:33:21 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 15:33:22 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 15:33:22 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 15:33:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 15:33:22 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.618 seconds (process running for 1.983)
[2024-12-10 15:33:53 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 4708 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-10 15:33:53 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 15:33:53 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 15:33:53 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 15:33:54 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 15:33:54 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 15:33:54 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 15:33:54 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 15:33:54 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 15:33:54 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 995 ms
[2024-12-10 15:33:54 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-10 15:33:54 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 15:33:55 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 15:33:55 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 15:33:55 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 15:33:55 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.867 seconds (process running for 2.205)
[2024-12-10 15:33:55 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 15:33:55 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 15:33:55 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 15:33:55 INFO http-nio-8080-exec-5] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 236 ms
[2024-12-10 15:33:56 INFO http-nio-8080-exec-8] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 54 ms
[2024-12-10 15:34:05 INFO http-nio-8080-exec-9] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: 30, userId: 0
[2024-12-10 15:34:05 WARN http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.green.greengramver.common.model.ResultResponse<java.util.List<com.green.greengramver.feed.model.FeedGetRes>> com.green.greengramver.feed.FeedController.getFeedList(com.green.greengramver.feed.model.FeedGetReq): [Field error in object 'feedGetReq' on field 'signed_user_id': rejected value [null]; codes [typeMismatch.feedGetReq.signed_user_id,typeMismatch.signed_user_id,typeMismatch.long,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [feedGetReq.signed_user_id,signed_user_id]; arguments []; default message [signed_user_id]]; default message [Failed to convert value of type 'null' to required type 'long'; Failed to convert from type [null] to type [@org.springframework.web.bind.annotation.BindParam @io.swagger.v3.oas.annotations.media.Schema long] for value [null]]] ]
[2024-12-10 15:34:20 INFO http-nio-8080-exec-10] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: 30, userId: 0
[2024-12-10 15:34:20 WARN http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.green.greengramver.common.model.ResultResponse<java.util.List<com.green.greengramver.feed.model.FeedGetRes>> com.green.greengramver.feed.FeedController.getFeedList(com.green.greengramver.feed.model.FeedGetReq): [Field error in object 'feedGetReq' on field 'signed_user_id': rejected value [null]; codes [typeMismatch.feedGetReq.signed_user_id,typeMismatch.signed_user_id,typeMismatch.long,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [feedGetReq.signed_user_id,signed_user_id]; arguments []; default message [signed_user_id]]; default message [Failed to convert value of type 'null' to required type 'long'; Failed to convert from type [null] to type [@org.springframework.web.bind.annotation.BindParam @io.swagger.v3.oas.annotations.media.Schema long] for value [null]]] ]
[2024-12-10 15:34:26 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: 30, userId: 19
[2024-12-10 15:34:26 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=19, profileUserId=18)
[2024-12-10 15:34:26 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 15:34:26 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@47ea9f08
[2024-12-10 15:34:26 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 15:34:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 19

            WHERE writer_user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 30
 {executed in 1 msec}
[2024-12-10 15:34:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid |pic |islike |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd      |asd |null|0      |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|

[2024-12-10 15:34:26 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengramver.feed.FeedPicMapper.selFeedPicListByFeedIds] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengramver.feed.FeedPicMapper.selFeedPicListByFeedIds
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:229)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedInvoker$0(MapperProxy.java:96)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at org.apache.ibatis.util.MapUtil.computeIfAbsent(MapUtil.java:36)
	at org.apache.ibatis.binding.MapperProxy.cachedInvoker(MapperProxy.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.selFeedPicListByFeedIds(Unknown Source)
	at com.green.greengramver.feed.FeedService.getFeedList3(FeedService.java:113)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver.feed.FeedService$$SpringCGLIB$$0.getFeedList3(<generated>)
	at com.green.greengramver.feed.FeedController.getFeedList(FeedController.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 15:35:40 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 15:35:40 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 15:35:42 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 4548 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-10 15:35:42 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 15:35:42 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 15:35:42 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 15:35:42 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 15:35:42 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 15:35:42 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 15:35:42 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 15:35:43 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 15:35:43 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 768 ms
[2024-12-10 15:35:43 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-10 15:35:43 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 15:35:43 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 15:35:43 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 15:35:43 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 15:35:43 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.634 seconds (process running for 1.995)
[2024-12-10 15:36:02 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 6864 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-10 15:36:02 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 15:36:02 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 15:36:02 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 15:36:02 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 15:36:02 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 15:36:02 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 15:36:02 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 15:36:02 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 15:36:02 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 751 ms
[2024-12-10 15:36:02 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-10 15:36:03 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 15:36:03 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 15:36:03 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 15:36:03 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 15:36:03 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.612 seconds (process running for 1.963)
[2024-12-10 15:59:19 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 8768 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-10 15:59:19 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 15:59:19 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 15:59:19 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 15:59:20 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 15:59:20 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 15:59:20 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 15:59:20 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 15:59:20 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 15:59:20 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 788 ms
[2024-12-10 15:59:20 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-10 15:59:21 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 15:59:21 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 15:59:21 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 15:59:21 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 15:59:21 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.848 seconds (process running for 2.188)
[2024-12-10 15:59:24 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 15:59:24 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 15:59:24 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-10 15:59:24 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: 30, userId: 19
[2024-12-10 15:59:24 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=19, profileUserId=18)
[2024-12-10 15:59:24 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 15:59:24 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7ab3f601
[2024-12-10 15:59:24 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 15:59:24 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 19

            WHERE writer_user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 30
 {executed in 1 msec}
[2024-12-10 15:59:24 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid |pic |islike |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd      |asd |null|0      |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|

[2024-12-10 15:59:24 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId, pic
        FROM feed_pic
        WHERE feed_id IN
         (  
            30
         ) 
        ORDER BY feed_id ASC
 {executed in 0 msec}
[2024-12-10 15:59:24 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|30      |27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|--------|-----------------------------------------|

[2024-12-10 15:59:24 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedService] feedPicList: [FeedPicSel(feedId=30, pic=27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg)]
[2024-12-10 15:59:24 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "java.util.List.size()" because "list" is null] with root cause
java.lang.NullPointerException: Cannot invoke "java.util.List.size()" because "list" is null
	at com.green.greengramver.feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 16:00:17 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 16:00:17 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 16:00:19 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 10424 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-10 16:00:19 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 16:00:19 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 16:00:19 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 16:00:20 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 16:00:20 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:00:20 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 16:00:20 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 16:00:20 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 16:00:20 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 769 ms
[2024-12-10 16:00:20 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-10 16:00:20 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 16:00:20 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 16:00:20 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:00:20 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 16:00:20 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.633 seconds (process running for 1.975)
[2024-12-10 16:00:22 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 16:00:22 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 16:00:22 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 16:00:22 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: 30, userId: 19
[2024-12-10 16:00:22 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=19, profileUserId=18)
[2024-12-10 16:00:22 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 16:00:22 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@56ad404b
[2024-12-10 16:00:22 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 16:00:22 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 19

            WHERE writer_user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 30
 {executed in 1 msec}
[2024-12-10 16:00:22 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid |pic |islike |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd      |asd |null|0      |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|

[2024-12-10 16:00:22 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId, pic
        FROM feed_pic
        WHERE feed_id IN
         (  
            30
         ) 
        ORDER BY feed_id ASC
 {executed in 1 msec}
[2024-12-10 16:00:22 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|30      |27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|--------|-----------------------------------------|

[2024-12-10 16:00:22 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedService] feedPicList: [FeedPicSel(feedId=30, pic=27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg)]
[2024-12-10 16:01:14 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 16:01:14 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 16:50:31 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 10724 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-10 16:50:31 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 16:50:31 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 16:50:31 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 16:50:32 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 16:50:32 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:50:32 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 16:50:32 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 16:50:32 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 16:50:32 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 907 ms
[2024-12-10 16:50:32 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-10 16:50:32 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 16:50:32 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 16:50:32 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:50:33 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 16:50:33 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.837 seconds (process running for 2.179)
[2024-12-10 16:50:35 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 16:50:35 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 16:50:35 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-10 16:50:35 INFO http-nio-8080-exec-7] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 207 ms
[2024-12-10 16:50:42 INFO http-nio-8080-exec-8] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: 30, userId: 19
[2024-12-10 16:50:42 INFO http-nio-8080-exec-8] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=19, profileUserId=18)
[2024-12-10 16:50:42 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 16:50:42 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@65c4de0c
[2024-12-10 16:50:42 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 16:50:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 19

            WHERE writer_user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 30
 {executed in 1 msec}
[2024-12-10 16:50:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid |pic |islike |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd      |asd |null|0      |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|

[2024-12-10 16:50:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId, pic
        FROM feed_pic
        WHERE feed_id IN
         (  
            30
         ) 
        ORDER BY feed_id ASC
 {executed in 0 msec}
[2024-12-10 16:50:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|30      |27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|--------|-----------------------------------------|

[2024-12-10 16:50:42 INFO http-nio-8080-exec-8] [com.green.greengramver.feed.FeedService] feedPicList: [FeedPicSel(feedId=30, pic=27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg)]
[2024-12-10 16:50:42 ERRORhttp-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.binding.BindingException: Parameter 'feedIds' not found. Available parameters are [p, collection, list]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:210)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextAccessor.getProperty(DynamicContext.java:119)
	at org.apache.ibatis.ognl.OgnlRuntime.getProperty(OgnlRuntime.java:3344)
	at org.apache.ibatis.ognl.ASTProperty.getValueBody(ASTProperty.java:121)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:586)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:550)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateIterable(ExpressionEvaluator.java:54)
	at org.apache.ibatis.scripting.xmltags.ForEachSqlNode.apply(ForEachSqlNode.java:71)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy83.selFeedCommentListByFeedIds(Unknown Source)
	at com.green.greengramver.feed.FeedService.getFeedList3(FeedService.java:134)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver.feed.FeedService$$SpringCGLIB$$0.getFeedList3(<generated>)
	at com.green.greengramver.feed.FeedController.getFeedList(FeedController.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 16:53:11 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 16:53:11 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 16:53:13 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 5128 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-10 16:53:13 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 16:53:13 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 16:53:13 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 16:53:13 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 16:53:13 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:53:13 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 16:53:13 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 16:53:13 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 16:53:13 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 765 ms
[2024-12-10 16:53:14 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-10 16:53:14 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 16:53:14 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 16:53:14 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:53:14 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 16:53:14 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.638 seconds (process running for 1.978)
[2024-12-10 16:53:17 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 16:53:17 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 16:53:17 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 16:53:17 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: 30, userId: 19
[2024-12-10 16:53:17 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=19, profileUserId=18)
[2024-12-10 16:53:17 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 16:53:17 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@396cd442
[2024-12-10 16:53:17 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 16:53:17 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 19

            WHERE writer_user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 30
 {executed in 0 msec}
[2024-12-10 16:53:17 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid |pic |islike |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd      |asd |null|0      |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|

[2024-12-10 16:53:17 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId, pic
        FROM feed_pic
        WHERE feed_id IN
         (  
            30
         ) 
        ORDER BY feed_id ASC
 {executed in 0 msec}
[2024-12-10 16:53:17 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|30      |27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|--------|-----------------------------------------|

[2024-12-10 16:53:17 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedService] feedPicList: [FeedPicSel(feedId=30, pic=27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg)]
[2024-12-10 16:53:17 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.binding.BindingException: Parameter 'feedIds' not found. Available parameters are [p, collection, list]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:210)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextAccessor.getProperty(DynamicContext.java:119)
	at org.apache.ibatis.ognl.OgnlRuntime.getProperty(OgnlRuntime.java:3344)
	at org.apache.ibatis.ognl.ASTProperty.getValueBody(ASTProperty.java:121)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:586)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:550)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateIterable(ExpressionEvaluator.java:54)
	at org.apache.ibatis.scripting.xmltags.ForEachSqlNode.apply(ForEachSqlNode.java:71)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy83.selFeedCommentListByFeedIds(Unknown Source)
	at com.green.greengramver.feed.FeedService.getFeedList3(FeedService.java:134)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver.feed.FeedService$$SpringCGLIB$$0.getFeedList3(<generated>)
	at com.green.greengramver.feed.FeedController.getFeedList(FeedController.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 16:55:10 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 16:55:10 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 16:55:24 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 1752 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-10 16:55:24 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 16:55:24 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 16:55:24 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 16:55:25 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 16:55:25 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:55:25 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 16:55:25 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 16:55:25 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 16:55:25 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 764 ms
[2024-12-10 16:55:25 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-10 16:55:25 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 16:55:25 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 16:55:25 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:55:25 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 16:55:25 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.611 seconds (process running for 1.964)
[2024-12-10 16:55:28 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 16:55:28 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 16:55:28 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 16:55:28 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: 30, userId: 19
[2024-12-10 16:55:28 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=19, profileUserId=18)
[2024-12-10 16:55:28 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 16:55:28 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@559a0ff2
[2024-12-10 16:55:28 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 16:55:28 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 19

            WHERE writer_user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 30
 {executed in 1 msec}
[2024-12-10 16:55:28 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid |pic |islike |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd      |asd |null|0      |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|

[2024-12-10 16:55:28 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId, pic
        FROM feed_pic
        WHERE feed_id IN
         (  
            30
         ) 
        ORDER BY feed_id ASC
 {executed in 0 msec}
[2024-12-10 16:55:28 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|30      |27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|--------|-----------------------------------------|

[2024-12-10 16:55:28 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedService] feedPicList: [FeedPicSel(feedId=30, pic=27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg)]
[2024-12-10 16:55:28 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.binding.BindingException: Parameter 'feedIds' not found. Available parameters are [p, collection, list]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:210)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextAccessor.getProperty(DynamicContext.java:119)
	at org.apache.ibatis.ognl.OgnlRuntime.getProperty(OgnlRuntime.java:3344)
	at org.apache.ibatis.ognl.ASTProperty.getValueBody(ASTProperty.java:121)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:586)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:550)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateIterable(ExpressionEvaluator.java:54)
	at org.apache.ibatis.scripting.xmltags.ForEachSqlNode.apply(ForEachSqlNode.java:71)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy83.selFeedCommentListByFeedIds(Unknown Source)
	at com.green.greengramver.feed.FeedService.getFeedList3(FeedService.java:134)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver.feed.FeedService$$SpringCGLIB$$0.getFeedList3(<generated>)
	at com.green.greengramver.feed.FeedController.getFeedList(FeedController.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 16:57:19 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 16:57:19 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 16:57:21 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 5848 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-10 16:57:21 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 16:57:22 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 16:57:22 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 16:57:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 16:57:22 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:57:22 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 16:57:22 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 16:57:22 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 16:57:22 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 761 ms
[2024-12-10 16:57:22 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-10 16:57:23 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 16:57:23 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 16:57:23 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:57:23 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 16:57:23 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.715 seconds (process running for 2.054)
[2024-12-10 16:57:25 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 16:57:25 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 16:57:25 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 16:57:25 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: 30, userId: 19
[2024-12-10 16:57:25 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=19, profileUserId=18)
[2024-12-10 16:57:25 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 16:57:25 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5e40b065
[2024-12-10 16:57:25 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 16:57:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 19

            WHERE writer_user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 30
 {executed in 0 msec}
[2024-12-10 16:57:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid |pic |islike |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd      |asd |null|0      |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|

[2024-12-10 16:57:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId, pic
        FROM feed_pic
        WHERE feed_id IN
         (  
            30
         ) 
        ORDER BY feed_id ASC
 {executed in 0 msec}
[2024-12-10 16:57:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|30      |27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|--------|-----------------------------------------|

[2024-12-10 16:57:25 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedService] feedPicList: [FeedPicSel(feedId=30, pic=27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg)]
[2024-12-10 16:57:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT T.feedId, T.feedCommentId, T.comment, T.writerUserId, T.writerNm, T.writerPic
        FROM (
        SELECT ROW_NUMBER() OVER (PARTITION BY A.feed_id ORDER BY A.feed_id, A.feed_comment_id DESC) AS num
        , A.feed_id AS feedId
        , A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id IN
         (  
            30
         ) 
        ) T
        WHERE T.num <= 4
 {executed in 3 msec}
[2024-12-10 16:57:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-------|--------------|--------|-------------|---------|----------|
|feedid |feedcommentid |comment |writeruserid |writernm |writerpic |
|-------|--------------|--------|-------------|---------|----------|
|-------|--------------|--------|-------------|---------|----------|

[2024-12-10 16:57:25 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "java.util.List.size()" because the return value of "com.green.greengramver.feed.comment.model.FeedCommentGetRes.getCommentList()" is null] with root cause
java.lang.NullPointerException: Cannot invoke "java.util.List.size()" because the return value of "com.green.greengramver.feed.comment.model.FeedCommentGetRes.getCommentList()" is null
	at com.green.greengramver.feed.FeedService.getFeedList3(FeedService.java:154)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver.feed.FeedService$$SpringCGLIB$$0.getFeedList3(<generated>)
	at com.green.greengramver.feed.FeedController.getFeedList(FeedController.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 16:59:26 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 16:59:26 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 16:59:29 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 288 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-10 16:59:29 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 16:59:29 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 16:59:29 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 16:59:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 16:59:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:59:29 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 16:59:29 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 16:59:29 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 16:59:29 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 820 ms
[2024-12-10 16:59:29 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-10 16:59:30 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 16:59:30 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 16:59:30 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:59:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 16:59:30 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.786 seconds (process running for 2.126)
[2024-12-10 16:59:32 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 16:59:32 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 16:59:32 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-10 16:59:32 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: 30, userId: 19
[2024-12-10 16:59:32 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=19, profileUserId=18)
[2024-12-10 16:59:32 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 16:59:32 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@68c622fd
[2024-12-10 16:59:32 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 16:59:32 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 19

            WHERE writer_user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 30
 {executed in 1 msec}
[2024-12-10 16:59:32 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid |pic |islike |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd      |asd |null|0      |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|

[2024-12-10 16:59:32 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId, pic
        FROM feed_pic
        WHERE feed_id IN
         (  
            30
         ) 
        ORDER BY feed_id ASC
 {executed in 1 msec}
[2024-12-10 16:59:32 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|30      |27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|--------|-----------------------------------------|

[2024-12-10 16:59:32 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedService] feedPicList: [FeedPicSel(feedId=30, pic=27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg)]
[2024-12-10 16:59:32 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT T.feedId, T.feedCommentId, T.comment, T.writerUserId, T.writerNm, T.writerPic
        FROM (
        SELECT ROW_NUMBER() OVER (PARTITION BY A.feed_id ORDER BY A.feed_id, A.feed_comment_id DESC) AS num
        , A.feed_id AS feedId
        , A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id IN
         (  
            30
         ) 
        ) T
        WHERE T.num <= 4
 {executed in 1 msec}
[2024-12-10 16:59:32 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-------|--------------|--------|-------------|---------|----------|
|feedid |feedcommentid |comment |writeruserid |writernm |writerpic |
|-------|--------------|--------|-------------|---------|----------|
|-------|--------------|--------|-------------|---------|----------|

[2024-12-10 16:59:32 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "java.util.List.size()" because the return value of "com.green.greengramver.feed.comment.model.FeedCommentGetRes.getCommentList()" is null] with root cause
java.lang.NullPointerException: Cannot invoke "java.util.List.size()" because the return value of "com.green.greengramver.feed.comment.model.FeedCommentGetRes.getCommentList()" is null
	at com.green.greengramver.feed.FeedService.getFeedList3(FeedService.java:154)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver.feed.FeedService$$SpringCGLIB$$0.getFeedList3(<generated>)
	at com.green.greengramver.feed.FeedController.getFeedList(FeedController.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 16:59:51 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 16:59:51 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 16:59:53 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 1492 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-10 16:59:53 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 16:59:53 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 16:59:53 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 16:59:54 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 16:59:54 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:59:54 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 16:59:54 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 16:59:54 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 16:59:54 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 747 ms
[2024-12-10 16:59:54 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-10 16:59:54 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 16:59:54 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 16:59:54 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:59:54 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 16:59:54 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.609 seconds (process running for 1.947)
[2024-12-10 16:59:57 INFO http-nio-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 16:59:57 INFO http-nio-8080-exec-4] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 16:59:57 INFO http-nio-8080-exec-4] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-10 16:59:57 INFO http-nio-8080-exec-4] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: 30, userId: 19
[2024-12-10 16:59:57 INFO http-nio-8080-exec-4] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=19, profileUserId=18)
[2024-12-10 16:59:57 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 16:59:57 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4798a8e5
[2024-12-10 16:59:57 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 16:59:57 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 19

            WHERE writer_user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 30
 {executed in 1 msec}
[2024-12-10 16:59:57 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid |pic |islike |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd      |asd |null|0      |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|

[2024-12-10 16:59:57 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId, pic
        FROM feed_pic
        WHERE feed_id IN
         (  
            30
         ) 
        ORDER BY feed_id ASC
 {executed in 1 msec}
[2024-12-10 16:59:57 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|30      |27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|--------|-----------------------------------------|

[2024-12-10 16:59:57 INFO http-nio-8080-exec-4] [com.green.greengramver.feed.FeedService] feedPicList: [FeedPicSel(feedId=30, pic=27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg)]
[2024-12-10 16:59:57 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT T.feedId, T.feedCommentId, T.comment, T.writerUserId, T.writerNm, T.writerPic
        FROM (
        SELECT ROW_NUMBER() OVER (PARTITION BY A.feed_id ORDER BY A.feed_id, A.feed_comment_id DESC) AS num
        , A.feed_id AS feedId
        , A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id IN
         (  
            30
         ) 
        ) T
        WHERE T.num <= 4
 {executed in 0 msec}
[2024-12-10 16:59:57 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-------|--------------|--------|-------------|---------|----------|
|feedid |feedcommentid |comment |writeruserid |writernm |writerpic |
|-------|--------------|--------|-------------|---------|----------|
|-------|--------------|--------|-------------|---------|----------|

[2024-12-10 17:00:18 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: 30, userId: 19
[2024-12-10 17:00:18 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=19, profileUserId=18)
[2024-12-10 17:00:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 19

            WHERE writer_user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 30
 {executed in 0 msec}
[2024-12-10 17:00:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid |pic |islike |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd      |asd |null|0      |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|

[2024-12-10 17:00:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId, pic
        FROM feed_pic
        WHERE feed_id IN
         (  
            30
         ) 
        ORDER BY feed_id ASC
 {executed in 0 msec}
[2024-12-10 17:00:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|30      |27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|--------|-----------------------------------------|

[2024-12-10 17:00:18 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedService] feedPicList: [FeedPicSel(feedId=30, pic=27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg)]
[2024-12-10 17:00:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT T.feedId, T.feedCommentId, T.comment, T.writerUserId, T.writerNm, T.writerPic
        FROM (
        SELECT ROW_NUMBER() OVER (PARTITION BY A.feed_id ORDER BY A.feed_id, A.feed_comment_id DESC) AS num
        , A.feed_id AS feedId
        , A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id IN
         (  
            30
         ) 
        ) T
        WHERE T.num <= 4
 {executed in 0 msec}
[2024-12-10 17:00:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-------|--------------|--------|-------------|---------|----------|
|feedid |feedcommentid |comment |writeruserid |writernm |writerpic |
|-------|--------------|--------|-------------|---------|----------|
|-------|--------------|--------|-------------|---------|----------|

[2024-12-10 17:00:21 INFO http-nio-8080-exec-3] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: 30, userId: 19
[2024-12-10 17:00:21 INFO http-nio-8080-exec-3] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=19, profileUserId=18)
[2024-12-10 17:00:21 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 19

            WHERE writer_user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 30
 {executed in 0 msec}
[2024-12-10 17:00:21 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid |pic |islike |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd      |asd |null|0      |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|

[2024-12-10 17:00:21 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId, pic
        FROM feed_pic
        WHERE feed_id IN
         (  
            30
         ) 
        ORDER BY feed_id ASC
 {executed in 0 msec}
[2024-12-10 17:00:21 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|30      |27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|--------|-----------------------------------------|

[2024-12-10 17:00:21 INFO http-nio-8080-exec-3] [com.green.greengramver.feed.FeedService] feedPicList: [FeedPicSel(feedId=30, pic=27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg)]
[2024-12-10 17:00:21 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT T.feedId, T.feedCommentId, T.comment, T.writerUserId, T.writerNm, T.writerPic
        FROM (
        SELECT ROW_NUMBER() OVER (PARTITION BY A.feed_id ORDER BY A.feed_id, A.feed_comment_id DESC) AS num
        , A.feed_id AS feedId
        , A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id IN
         (  
            30
         ) 
        ) T
        WHERE T.num <= 4
 {executed in 0 msec}
[2024-12-10 17:00:21 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-------|--------------|--------|-------------|---------|----------|
|feedid |feedcommentid |comment |writeruserid |writernm |writerpic |
|-------|--------------|--------|-------------|---------|----------|
|-------|--------------|--------|-------------|---------|----------|

[2024-12-10 17:00:52 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 17:00:52 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 17:00:54 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 1324 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-10 17:00:54 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 17:00:54 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 17:00:54 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 17:00:54 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 17:00:54 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:00:54 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 17:00:54 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 17:00:54 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 17:00:54 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 776 ms
[2024-12-10 17:00:55 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-10 17:00:55 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 17:00:55 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 17:00:55 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:00:55 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 17:00:55 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.684 seconds (process running for 2.08)
[2024-12-10 17:00:55 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 17:00:55 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 17:00:55 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 17:00:55 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: 30, userId: 19
[2024-12-10 17:00:55 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=19, profileUserId=18)
[2024-12-10 17:00:55 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 17:00:55 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3a2c8fe1
[2024-12-10 17:00:55 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 17:00:55 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 19

            WHERE writer_user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 30
 {executed in 1 msec}
[2024-12-10 17:00:55 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid |pic |islike |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd      |asd |null|0      |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|

[2024-12-10 17:00:55 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId, pic
        FROM feed_pic
        WHERE feed_id IN
         (  
            30
         ) 
        ORDER BY feed_id ASC
 {executed in 1 msec}
[2024-12-10 17:00:55 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|30      |27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|--------|-----------------------------------------|

[2024-12-10 17:00:55 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedService] feedPicList: [FeedPicSel(feedId=30, pic=27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg)]
[2024-12-10 17:00:55 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT T.feedId, T.feedCommentId, T.comment, T.writerUserId, T.writerNm, T.writerPic
        FROM (
        SELECT ROW_NUMBER() OVER (PARTITION BY A.feed_id ORDER BY A.feed_id, A.feed_comment_id DESC) AS num
        , A.feed_id AS feedId
        , A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id IN
         (  
            30
         ) 
        ) T
        WHERE T.num <= 4
 {executed in 0 msec}
[2024-12-10 17:00:55 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-------|--------------|--------|-------------|---------|----------|
|feedid |feedcommentid |comment |writeruserid |writernm |writerpic |
|-------|--------------|--------|-------------|---------|----------|
|-------|--------------|--------|-------------|---------|----------|

[2024-12-10 17:00:55 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedService] asdsadasdasdasdazxczxczxczx: [com.green.greengramver.feed.model.FeedGetRes@603852e9]
[2024-12-10 17:01:07 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 17:01:07 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 17:01:09 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 5956 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-10 17:01:09 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 17:01:09 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 17:01:09 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 17:01:10 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 17:01:10 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:01:10 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 17:01:10 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 17:01:10 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 17:01:10 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 768 ms
[2024-12-10 17:01:10 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-10 17:01:10 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 17:01:10 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 17:01:10 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:01:10 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 17:01:10 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.632 seconds (process running for 1.972)
[2024-12-10 17:01:11 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 17:01:11 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 17:01:11 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 17:01:11 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: 30, userId: 19
[2024-12-10 17:01:11 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=19, profileUserId=18)
[2024-12-10 17:01:11 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 17:01:11 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3fff177
[2024-12-10 17:01:11 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 17:01:11 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 19

            WHERE writer_user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 30
 {executed in 0 msec}
[2024-12-10 17:01:11 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid |pic |islike |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd      |asd |null|0      |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|

[2024-12-10 17:01:11 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId, pic
        FROM feed_pic
        WHERE feed_id IN
         (  
            30
         ) 
        ORDER BY feed_id ASC
 {executed in 1 msec}
[2024-12-10 17:01:11 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|30      |27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|--------|-----------------------------------------|

[2024-12-10 17:01:11 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedService] feedPicList: [FeedPicSel(feedId=30, pic=27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg)]
[2024-12-10 17:01:11 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT T.feedId, T.feedCommentId, T.comment, T.writerUserId, T.writerNm, T.writerPic
        FROM (
        SELECT ROW_NUMBER() OVER (PARTITION BY A.feed_id ORDER BY A.feed_id, A.feed_comment_id DESC) AS num
        , A.feed_id AS feedId
        , A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id IN
         (  
            30
         ) 
        ) T
        WHERE T.num <= 4
 {executed in 0 msec}
[2024-12-10 17:01:11 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-------|--------------|--------|-------------|---------|----------|
|feedid |feedcommentid |comment |writeruserid |writernm |writerpic |
|-------|--------------|--------|-------------|---------|----------|
|-------|--------------|--------|-------------|---------|----------|

[2024-12-10 17:01:11 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedService] asdsadasdasdasdazxczxczxczx: [FeedGetRes(feedId=30, contents=i am panguin, location=남극, createdAt=2024-12-02 16:46:05, writerUserId=18, writerNm=asd, writerPic=null, isLike=0, pics=[27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg], comment=com.green.greengramver.feed.comment.model.FeedCommentGetRes@405fa76)]
[2024-12-10 17:01:29 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 17:01:29 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 17:01:31 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 5992 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-10 17:01:31 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 17:01:31 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 17:01:31 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 17:01:31 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 17:01:31 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:01:31 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 17:01:31 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 17:01:31 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 17:01:31 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 761 ms
[2024-12-10 17:01:31 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-10 17:01:32 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 17:01:32 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 17:01:32 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:01:32 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 17:01:32 INFO restartedMain] [com.green.greengramver.GreenGramVer3Application] Started GreenGramVer3Application in 1.674 seconds (process running for 2.022)
[2024-12-10 17:01:35 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 17:01:35 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 17:01:35 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-10 17:01:35 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: 30, userId: 19
[2024-12-10 17:01:35 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=19, profileUserId=18)
[2024-12-10 17:01:35 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 17:01:35 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5c1e17fe
[2024-12-10 17:01:35 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 17:01:35 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 19

            WHERE writer_user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 30
 {executed in 1 msec}
[2024-12-10 17:01:35 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid |pic |islike |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd      |asd |null|0      |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|

[2024-12-10 17:01:35 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId, pic
        FROM feed_pic
        WHERE feed_id IN
         (  
            30
         ) 
        ORDER BY feed_id ASC
 {executed in 0 msec}
[2024-12-10 17:01:35 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|30      |27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|--------|-----------------------------------------|

[2024-12-10 17:01:35 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedService] feedPicList: [FeedPicSel(feedId=30, pic=27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg)]
[2024-12-10 17:01:35 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT T.feedId, T.feedCommentId, T.comment, T.writerUserId, T.writerNm, T.writerPic
        FROM (
        SELECT ROW_NUMBER() OVER (PARTITION BY A.feed_id ORDER BY A.feed_id, A.feed_comment_id DESC) AS num
        , A.feed_id AS feedId
        , A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id IN
         (  
            30
         ) 
        ) T
        WHERE T.num <= 4
 {executed in 0 msec}
[2024-12-10 17:01:35 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-------|--------------|--------|-------------|---------|----------|
|feedid |feedcommentid |comment |writeruserid |writernm |writerpic |
|-------|--------------|--------|-------------|---------|----------|
|-------|--------------|--------|-------------|---------|----------|

[2024-12-10 17:01:35 INFO http-nio-8080-exec-1] [com.green.greengramver.feed.FeedService] asdsadasdasdasdazxczxczxczx: [FeedGetRes(feedId=30, contents=i am panguin, location=남극, createdAt=2024-12-02 16:46:05, writerUserId=18, writerNm=asd, writerPic=null, isLike=0, pics=[27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg], comment=FeedCommentGetRes(moreComment=false, commentList=null))]
[2024-12-10 17:03:31 INFO http-nio-8080-exec-3] [com.green.greengramver.feed.model.FeedGetReq] page: null, size: null, userId: 19
[2024-12-10 17:03:31 INFO http-nio-8080-exec-3] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=19, profileUserId=18)
[2024-12-10 17:03:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 19

            WHERE writer_user_id = 18

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-10 17:03:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid |pic |islike |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd      |asd |null|0      |
|--------|-------------|---------|--------------------|--------|---------|----|----|-------|

[2024-12-10 17:03:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId, pic
        FROM feed_pic
        WHERE feed_id IN
         (  
            30
         ) 
        ORDER BY feed_id ASC
 {executed in 0 msec}
[2024-12-10 17:03:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|30      |27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|--------|-----------------------------------------|

[2024-12-10 17:03:31 INFO http-nio-8080-exec-3] [com.green.greengramver.feed.FeedService] feedPicList: [FeedPicSel(feedId=30, pic=27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg)]
[2024-12-10 17:03:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT T.feedId, T.feedCommentId, T.comment, T.writerUserId, T.writerNm, T.writerPic
        FROM (
        SELECT ROW_NUMBER() OVER (PARTITION BY A.feed_id ORDER BY A.feed_id, A.feed_comment_id DESC) AS num
        , A.feed_id AS feedId
        , A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id IN
         (  
            30
         ) 
        ) T
        WHERE T.num <= 4
 {executed in 0 msec}
[2024-12-10 17:03:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-------|--------------|--------|-------------|---------|----------|
|feedid |feedcommentid |comment |writeruserid |writernm |writerpic |
|-------|--------------|--------|-------------|---------|----------|
|-------|--------------|--------|-------------|---------|----------|

[2024-12-10 17:03:31 INFO http-nio-8080-exec-3] [com.green.greengramver.feed.FeedService] asdsadasdasdasdazxczxczxczx: [FeedGetRes(feedId=30, contents=i am panguin, location=남극, createdAt=2024-12-02 16:46:05, writerUserId=18, writerNm=asd, writerPic=null, isLike=0, pics=[27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg], comment=FeedCommentGetRes(moreComment=false, commentList=null))]
[2024-12-10 17:03:57 INFO http-nio-8080-exec-2] [com.green.greengramver.feed.model.FeedGetReq] page: null, size: null, userId: 19
[2024-12-10 17:03:57 INFO http-nio-8080-exec-2] [com.green.greengramver.feed.FeedController] p----------------------: FeedGetReq(signedUserId=19, profileUserId=null)
[2024-12-10 17:03:57 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 19

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-10 17:03:57 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm     |uid     |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|
|37      |ㅁㄴㅇㅁㄴㅇ       |ㅁㅁ       |2024-12-09 12:53:07 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|36      |ㅇ            |ㅇ        |2024-12-06 13:08:11 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|35      |심영           |대구       |2024-12-04 12:05:00 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|34      |zzzz         |ㅁㅁ       |2024-12-04 11:16:26 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|33      |aaa          |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                     |0      |
|30      |i am panguin |남극       |2024-12-02 16:46:05 |18      |asd          |asd     |null                                     |0      |
|29      |asdf         |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg |0      |
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |0      |
|--------|-------------|---------|--------------------|--------|-------------|--------|-----------------------------------------|-------|

[2024-12-10 17:03:57 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId, pic
        FROM feed_pic
        WHERE feed_id IN
         (  
            37
         , 
            36
         , 
            35
         , 
            34
         , 
            33
         , 
            30
         , 
            29
         , 
            28
         , 
            17
         , 
            16
         , 
            4
         , 
            3
         , 
            2
         , 
            1
         ) 
        ORDER BY feed_id ASC
 {executed in 0 msec}
[2024-12-10 17:03:57 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|3       |72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|4       |19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|4       |b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|16      |7fb72374-427c-418f-a599-0765bf0bea9e.png |
|17      |e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|28      |9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|29      |acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|30      |27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|33      |58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|34      |775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|35      |9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif |
|36      |e144db0a-63fe-4f99-b677-064862378052.jpg |
|37      |f72a3852-68a4-4709-9fcf-f957106a1059.png |
|--------|-----------------------------------------|

[2024-12-10 17:03:57 INFO http-nio-8080-exec-2] [com.green.greengramver.feed.FeedService] feedPicList: [FeedPicSel(feedId=3, pic=72671603-d18a-4afa-a1d2-187c5a5464d6.jpg), FeedPicSel(feedId=4, pic=19745bd6-523d-468f-bf92-cf358d94c1cb.jpg), FeedPicSel(feedId=4, pic=b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg), FeedPicSel(feedId=16, pic=7fb72374-427c-418f-a599-0765bf0bea9e.png), FeedPicSel(feedId=17, pic=e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg), FeedPicSel(feedId=28, pic=9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg), FeedPicSel(feedId=29, pic=acf066ca-0e44-45c8-b170-e473f991ba71.jpg), FeedPicSel(feedId=30, pic=27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg), FeedPicSel(feedId=33, pic=58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg), FeedPicSel(feedId=34, pic=775dcb86-eeb7-4702-9b15-2d510587a7a1.png), FeedPicSel(feedId=35, pic=9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif), FeedPicSel(feedId=36, pic=e144db0a-63fe-4f99-b677-064862378052.jpg), FeedPicSel(feedId=37, pic=f72a3852-68a4-4709-9fcf-f957106a1059.png)]
[2024-12-10 17:03:57 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT T.feedId, T.feedCommentId, T.comment, T.writerUserId, T.writerNm, T.writerPic
        FROM (
        SELECT ROW_NUMBER() OVER (PARTITION BY A.feed_id ORDER BY A.feed_id, A.feed_comment_id DESC) AS num
        , A.feed_id AS feedId
        , A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id IN
         (  
            37
         , 
            36
         , 
            35
         , 
            34
         , 
            33
         , 
            30
         , 
            29
         , 
            28
         , 
            17
         , 
            16
         , 
            4
         , 
            3
         , 
            2
         , 
            1
         ) 
        ) T
        WHERE T.num <= 4
 {executed in 0 msec}
[2024-12-10 17:03:57 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-------|--------------|----------|-------------|---------|-----------------------------------------|
|feedid |feedcommentid |comment   |writeruserid |writernm |writerpic                                |
|-------|--------------|----------|-------------|---------|-----------------------------------------|
|28     |12            |123123213 |12           |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|28     |8             |ㅋㅌㅌㅋㅊㅌㅋ   |12           |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|28     |7             |ㄴㅁㅇㅁㅇ     |12           |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|28     |6             |ㅇㅋ        |12           |고길동      |0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png |
|33     |15            |asdadsad  |18           |asd      |null                                     |
|33     |14            |asdsada   |18           |asd      |null                                     |
|-------|--------------|----------|-------------|---------|-----------------------------------------|

[2024-12-10 17:03:57 INFO http-nio-8080-exec-2] [com.green.greengramver.feed.FeedService] asdsadasdasdasdazxczxczxczx: [FeedGetRes(feedId=37, contents=ㅁㄴㅇㅁㄴㅇ, location=ㅁㅁ, createdAt=2024-12-09 12:53:07, writerUserId=12, writerNm=고길동, writerPic=0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png, isLike=0, pics=[f72a3852-68a4-4709-9fcf-f957106a1059.png], comment=FeedCommentGetRes(moreComment=false, commentList=null)), FeedGetRes(feedId=36, contents=ㅇ, location=ㅇ, createdAt=2024-12-06 13:08:11, writerUserId=19, writerNm=사공그에게 압도적 감사, writerPic=null, isLike=0, pics=[e144db0a-63fe-4f99-b677-064862378052.jpg], comment=FeedCommentGetRes(moreComment=false, commentList=null)), FeedGetRes(feedId=35, contents=심영, location=대구, createdAt=2024-12-04 12:05:00, writerUserId=19, writerNm=사공그에게 압도적 감사, writerPic=null, isLike=0, pics=[9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif], comment=FeedCommentGetRes(moreComment=false, commentList=null)), FeedGetRes(feedId=34, contents=zzzz, location=ㅁㅁ, createdAt=2024-12-04 11:16:26, writerUserId=19, writerNm=사공그에게 압도적 감사, writerPic=null, isLike=0, pics=[775dcb86-eeb7-4702-9b15-2d510587a7a1.png], comment=FeedCommentGetRes(moreComment=false, commentList=null)), FeedGetRes(feedId=33, contents=aaa, location=ㅁㅁ, createdAt=2024-12-04 11:14:03, writerUserId=19, writerNm=사공그에게 압도적 감사, writerPic=null, isLike=0, pics=[58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg], comment=FeedCommentGetRes(moreComment=false, commentList=[com.green.greengramver.feed.comment.model.FeedCommentDto@472058d5, com.green.greengramver.feed.comment.model.FeedCommentDto@634ec57e])), FeedGetRes(feedId=30, contents=i am panguin, location=남극, createdAt=2024-12-02 16:46:05, writerUserId=18, writerNm=asd, writerPic=null, isLike=0, pics=[27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg], comment=FeedCommentGetRes(moreComment=false, commentList=null)), FeedGetRes(feedId=29, contents=asdf, location=asdf, createdAt=2024-12-02 16:46:00, writerUserId=17, writerNm=1234, writerPic=5caa864c-8be6-4f62-8764-e140c0225815.jpg, isLike=0, pics=[acf066ca-0e44-45c8-b170-e473f991ba71.jpg], comment=FeedCommentGetRes(moreComment=false, commentList=null)), FeedGetRes(feedId=28, contents=I am panguin, location=남극, createdAt=2024-11-29 16:49:58, writerUserId=12, writerNm=고길동, writerPic=0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png, isLike=0, pics=[9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg], comment=FeedCommentGetRes(moreComment=true, commentList=[com.green.greengramver.feed.comment.model.FeedCommentDto@75b85a72, com.green.greengramver.feed.comment.model.FeedCommentDto@7a33df68, com.green.greengramver.feed.comment.model.FeedCommentDto@3f10d60b, com.green.greengramver.feed.comment.model.FeedCommentDto@2a6081a2])), FeedGetRes(feedId=17, contents=sss, location=ㅁㅁ, createdAt=2024-11-29 16:28:19, writerUserId=12, writerNm=고길동, writerPic=0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png, isLike=0, pics=[e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg], comment=FeedCommentGetRes(moreComment=false, commentList=null)), FeedGetRes(feedId=16, contents=daf, location=daf, createdAt=2024-11-29 16:20:17, writerUserId=12, writerNm=고길동, writerPic=0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png, isLike=0, pics=[7fb72374-427c-418f-a599-0765bf0bea9e.png], comment=FeedCommentGetRes(moreComment=false, commentList=null)), FeedGetRes(feedId=4, contents=테스트용22, location=대구, createdAt=2024-11-29 10:37:54, writerUserId=12, writerNm=고길동, writerPic=0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png, isLike=0, pics=[19745bd6-523d-468f-bf92-cf358d94c1cb.jpg, b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg], comment=FeedCommentGetRes(moreComment=false, commentList=null)), FeedGetRes(feedId=3, contents=테스트용22, location=대구, createdAt=2024-11-29 10:37:17, writerUserId=12, writerNm=고길동, writerPic=0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png, isLike=0, pics=[72671603-d18a-4afa-a1d2-187c5a5464d6.jpg], comment=FeedCommentGetRes(moreComment=false, commentList=null)), FeedGetRes(feedId=2, contents=테스트용22, location=대구, createdAt=2024-11-29 10:36:40, writerUserId=12, writerNm=고길동, writerPic=0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png, isLike=0, pics=null, comment=FeedCommentGetRes(moreComment=false, commentList=null)), FeedGetRes(feedId=1, contents=블라블라, location=대구, createdAt=2024-11-28 17:22:09, writerUserId=12, writerNm=고길동, writerPic=0944c2dd-b1f1-465b-ae33-6ffc2bb73db1.png, isLike=0, pics=null, comment=FeedCommentGetRes(moreComment=false, commentList=null))]
[2024-12-10 17:04:54 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 17:04:54 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
